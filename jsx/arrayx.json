[
	{
		"name": "buildIn",
		"type": "Function",
		"parameters": [],
		"description": "adds the <code>mathx</code> functions to <code>Math</code>"
	},
	{
		"prefix": "array",
		"name": "propSort",
		"type": "Function",
		"parameters": [
			{
				"name": "...params",
				"grammar": [
					[
						"parameter",
						"sort property | ( '[', sort property, ',', sort function, ']' )"
					],
					[
						"sort property",
						"property, [ '<' | '>' ]"
					],
					[
						"property",
						"? an object property ?"
					],
					[
						"sort function",
						"? a function for Array.prototype.sort ?"
					]
				],
				"default": "0, 1, ..., array[0].length - 1",
				"description": "If just a <code>sort property</code> is provied, the objects are sorted via the default sort function of <code>Array.prototype.sort</code>. <code><</code> signifies a sort in the default direction and can be omitted unless <code>property</code> ends in <code><</code>. <code>></code> signfifies a sort in the oposite direction."
			}
		],
		"description": "<code>propSort</code> is used to sort an array of obejcts based on their propery values. The objects are sorted according to the first <code>parameter</code>. For any object that has the same value for the <code>nth parameter</code>, the <code>n+1th parameter</code> is used to break that tie."
	},
	{
		"prefix": "array",
		"name": "randomRemove",
		"type": "Function",
		"parameters": [],
		"description": "removes a random element from <code>array</code>",
		"returns": "the removed element"
	},
	{
		"prefix": "array",
		"name": "shuffle",
		"type": "Function",
		"parameters": [],
		"description": "shuffles <code>array</code> in place",
		"returns": "<code>array</code>"
	}
]
