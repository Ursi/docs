[
	{
		"name": "get",
		"type": "function",
		"description": "<code>httpq.get</code> takes in the same parameters as Node.js's <code>http.get</code>, however, it accepts both <code>http</code> and <code>https</code>",
		"returns": "a promise that resolves to the body of the response encoded in <code>utf-8</code>"
	},
	{
		"name": "getRaw",
		"type": "function",
		"description": "same as <code>httpq.get</code> except the promise resolves to a <code>Buffer</code>",
		"returns": "a promise that resolves to a <code>Buffer</code> of the retrieved data."
	},
	{
		"name": "http",
		"type": "module",
		"description": "Node.js's <code>http</code> module"
	},
	{
		"name": "https",
		"type": "module",
		"description": "Node.js's <code>https</code> module"
	},
	{
		"name": "post",
		"type": "function",
		"description": "<code>httpq.post</code> takes in the same parameters as Node.js's <code>http.post</code>, however, it accepts both <code>http</code> and <code>https</code>",
		"returns": "a promise that resolves to the body of the response encoded in <code>utf-8</code>"
	},
	{
		"name": "postRaw",
		"type": "function",
		"description": "same as <code>httpq.post</code> except the promise resolves to a <code>Buffer</code>",
		"returns": "a promise that resolves to a <code>Buffer</code> of the retrieved data."
	},
	{
		"name": "request",
		"type": "function",
		"parameters": [
			{
				"name": "reqFunc",
				"type": "function",
				"description": "a function that is passed the <code>http.ClientRequest</code> created by a call to <code>http(s).request(...params)"
			},
			{
				"name": "...params",
				"description": "the parameters passed to <code>http(s).request</code>"
			}
		],
		"returns": "a promise that resolves to a <code>Buffer</code> containing the body of the response"
	}
]
